{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=86400","cache-control":"public, max-age=600","connection":"keep-alive","content-encoding":"br","content-type":"application/json;charset=utf-8","date":"Mon, 30 Oct 2023 08:01:24 GMT","server":"openresty","transfer-encoding":"chunked","vary":"Accept-Encoding,Accept-Encoding, Origin","via":"1.1 9c0ce977a13f3d9bbc6eed6540faf728.cloudfront.net (CloudFront)","x-amz-cf-id":"L7K8vLeH7dP26fur4_CdIbuIHUwi58HB6VtzvCBjx41s0jaLaYjjiA==","x-amz-cf-pop":"ZRH55-P1","x-cache":"Miss from cloudfront"},"body":"","status":200,"url":"https://api.themoviedb.org/3/discover/movie?api_key=38278a2f0e4e01b0a5ac60f4651b87eb&language=fr"},"revalidate":86400,"tags":[]}